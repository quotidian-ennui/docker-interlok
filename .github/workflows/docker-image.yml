name: docker-image

on:
  workflow_call:
    inputs:
      target_branch:
        required: true
        description: 'The branch to checkout and work-on'
        type: string
    secrets:
      DOCKER_USER:
        required: true
      DOCKER_TOKEN:
        required: true

jobs:
  docker-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_target: [ 'eclipse-temurin::linux/amd64,linux/arm64',
                         'liberica-alpine:-liberica-alpine:linux/amd64,linux/arm64',
                         'corretto:-corretto:linux/amd64,linux/arm64',
                         'graalvm:-graalvm:linux/amd64,linux/arm64']
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.target_branch }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Docker Image Info
      id: docker_image
      run: |
        DOCKER_FILE=$(echo "${{ matrix.docker_target }}" | cut -f1 -d:)/Dockerfile
        DOCKER_IMAGE=lewinc/interlok-base:snapshot$(echo "${{ matrix.docker_target }}" | cut -f2 -d:)
        DOCKER_PLATFORM=$(echo "${{ matrix.docker_target }}" | cut -f3 -d:)
        echo "docker_file=${DOCKER_FILE}" >> $GITHUB_OUTPUT
        echo "docker_tags=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
        echo "docker_platform=${DOCKER_PLATFORM}" >> $GITHUB_OUTPUT
    - name: Build Image
      uses: docker/build-push-action@v4
      with:
        # no-cache: true
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ${{ steps.docker_image.outputs.docker_file }}
        platforms: ${{ steps.docker_image.outputs.docker_platform }}
        push: true
        tags: ${{ steps.docker_image.outputs.docker_tags }}
        provenance: false